{
  "name": "grunt-ng-constant",
  "description": "Plugin for dynamic generation of angular constant modules.",
  "version": "0.4.7",
  "homepage": "https://github.com/werk85/grunt-ng-constant",
  "author": {
    "name": "Malte Legenhausen",
    "email": "legenhausen@werk85.de"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/werk85/grunt-ng-constant.git"
  },
  "bugs": {
    "url": "https://github.com/werk85/grunt-ng-constant/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/werk85/grunt-ng-constant/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1",
    "grunt-bump": "0.0.11"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "angular",
    "angularjs",
    "constants",
    "module",
    "generator"
  ],
  "dependencies": {
    "js2coffee": "~0.2.3",
    "lodash": "~2.4.1"
  },
  "readme": "# grunt-ng-constant\n\n> Plugin for dynamic generation of angular constant modules.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-ng-constant --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-ng-constant');\n```\n\n## The \"ngconstant\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `ngconstant` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  ngconstant: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific module configurations.\n      // This can be an array if you want to define multiple modules for a single target\n      // See the \"Multiple Module Option\" for further informations.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.space\nType: `String`\nDefault value: `'\\t'`\n\nA string that defines how the `JSON.stringify` method will prettify your code. You can get more information in the [MDN Documentation](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/JSON/stringify).\n\n#### options.deps\nType: `Array` or `Boolean`\nDefault value: `[]`\n\nAn array that specifies the default dependencies a module should have. When your module should not have any modules, so you can append the constants to an already existing one, you can set `deps` to `false`.\n\n#### options.wrap\nType: `String` or `Boolean`\nDefault value: `false`\nOptional\n\nA boolean to active or deactive the automatic wrapping. A string who will wrap the result of file, use the `<%= __ngModule %>` variable to indicate where to put the generated module content. See the \"Custom Wrap Option\" section for further informations.\n\n#### options.constants\nType: `Object`\nDefault value: `{}`\nOptional\n\nAn object that gets automatically merged in all target `constants` definitions. When you use the multiple module option it gets merged in the first `constants` definition. This option should be used when you need a global `constants` definition for all your targets.\n\n#### options.coffee\nType: `Boolean`\nDefault value: `false`\nOptional\n\nA boolean to toggle coffeescript output instead of javascript, using [`js2coffee`](https://github.com/rstacruz/js2coffee). Can also be assigned on a per-target basis.\n\n### Usage Examples\n\n#### Default Options\nIn this example I convert the package.json information in an angular module. So I am able to display e.g. the current version of the application in the app.\n\n```js\ngrunt.initConfig({\n  ngconstant: {\n    dist: {\n      dest: 'dist/constants.js',\n      name: 'constants',\n      constants: {\n        package: grunt.file.readJSON('package.json')\n      }\n    }\n  },\n})\n```\n\n#### Default Options, Coffeescript\nSame as above example, but outputs coffeescript instead\n\n```js\ngrunt.initConfig({\n  ngconstant: {\n    options: {\n      coffee: true\n    },\n    dist: {\n      dest: 'dist/constants.coffee',\n      name: 'constants',\n      constants: {\n        package: grunt.file.readJSON('package.json')\n      }\n    }\n  },\n})\n```\n\n#### Custom Options\nIn this example we set custom configurations for the `space` and `deps` parameter. So we create a module that has `dep1` and `dep2` as dependency and defines to different constants `constants1` and `constants2` with custom values. The `space` parameter is set to a ` `.\n\n```js\ngrunt.initConfig({\n  ngconstant: {\n    options: {\n      space: ' ',\n      deps: ['dep1', 'dep2']\n    },\n    dist: {\n      dest: 'dist/module.js',\n      name: 'someModule',\n      constants: {\n        'constant1': 'some value you want to set as constant value. This can be of any type that can be transformed via JSON.stringify',\n        'constant2': {\n          'key1': 'value1',\n          'key2': 42\n        }\n      }\n    }\n  },\n})\n```\n\nThe resulting module looks like the following:\n\n```\nangular.module(\"someModule\", [\"dep1\", \"dep2\"])\n\n.constant(\"constant1\", \"some value you want to set as constant value.\n  This can be of any type that can be transformed via JSON.stringify\")\n\n.constant(\"constant2\", {\n  \"key1\": \"value1\",\n  \"key2\": 42\n})\n\n;\n```\n\n#### Wrap Option\n\nThe `wrap` option allows you to encapsulate the module in a closure. Simply set `wrap` to `true`.\n\n```js\ngrunt.initConfig({\n  ngconstant: {\n    options: {\n      space: ' ',\n      deps: ['dep1', 'dep2']\n    },\n    dist: {\n      dest: 'tmp/wrap_options.js',\n      name: 'module2',\n      deps: ['test'],\n      wrap: true,\n      constants: {\n        'constant1': {\n          key1: 123,\n          key2: 'value2',\n          foobar: false\n        }\n      }\n    }\n  },\n})\n```\n\nThe resulting module looks like:\n\n```js\n(function(angular, undefined) {\n   angular.module(\"module2\", [\"test\"])\n\n.constant(\"constant1\", {\n  \"key1\": 123,\n  \"key2\": \"value2\",\n  \"foobar\": false\n})\n\n; \n})(angular);\n```\n\n#### Custom Wrap Option\n\nIf you want to use another wrapping you can use a string as `wrap` option, which is interpolated by the plugin. Use the `__ngModule` variable as placeholder for the generated module.\n\nHere a RequireJS example:\n\n```js\ngrunt.initConfig({\n  ngconstant: {\n    options: {\n      space: ' ',\n      deps: ['dep1', 'dep2']\n    },\n    dist: {\n      dest: 'tmp/wrap_options.js',\n      name: 'module2',\n      deps: ['test'],\n      wrap: 'define( [\"angular\", \"ngResource\", \"ngCookies\"], function() { \\n return <%= __ngModule %> \\n\\n});',\n      constants: {\n        'constant1': {\n          key1: 123,\n          key2: 'value2',\n          foobar: false\n        }\n      }\n    }\n  },\n})\n```\n\nThe resulting module looks like the following:\n\n```\ndefine( [\"angular\", \"ngResource\", \"ngCookies\"], function() { \n return angular.module(\"module2\", [\"test\"])\n\n.constant(\"constant1\", {\n  \"key1\": 123,\n  \"key2\": \"value2\",\n  \"foobar\": false\n})\n\n; \n\n});\n```\n\n#### Global Constants option\n\nIf you need the same configuration for all your targets you can use the `constants` option to automatically merge your per target configuration with the global one.\n\n```js\ngrunt.initConfig({\n  ngconstant: {\n    options: {\n      constants: {\n        title: 'grunt-ng-constant',\n        debug: false\n      }\n    },\n    dev: {\n      name: 'config',\n      dest: 'build/config.js',\n      constants: {\n        debug: true\n      }\n    },\n    prod: {\n      name: 'config',\n      dest: 'dist/config.js',\n      constants: {\n\n      }\n    }\n  }\n});\n```\n\nWhich results in the following constants objects.\n\n```js\n// For your dev target build/config.js\nangular.module('config', [])\n\n.constant('title', 'grunt-ng-constant')\n\n.constant('debug', true)\n\n;\n\n// For your prod target dist/config.js\nangular.module('config', [])\n\n.constant('title', 'grunt-ng-constant')\n\n.constant('debug', false)\n\n;\n```\n\n#### Multiple Module Option\n\nIf you want to define multiple modules for a single target at once you wrap your target configuration in an array.\n\n```js\ngrunt.initConfig({\n  ngconstant: {\n    dist: [\n      {\n        dest: 'dist/module1.js',\n        name: 'constants1',\n        constants: {\n          ...\n        }\n      },\n      {\n        dest: 'dist/module2.js',\n        name: 'constants2',\n        constants: {\n          ...\n        }\n      }\n    ]\n  },\n})\n```\n\nThis will create two files with two different modules.\n\n#### CoffeeScript Module Option\n\nIf you want to get coffee script output instead of javascript you can set the `coffee` option to `true`.\n\n```js\ngrunt.initConfig({\n  ngconstant: {\n    options: {\n      coffee: true // Globally active coffee script generation\n    },\n    coffee: {\n      dest: 'dist/module1.js',\n      name: 'constants1',\n      constants: {\n        ...\n      }\n    },\n    js: {\n      coffee: false, // Deactivate it on per module base\n      dest: 'dist/module1.js',\n      name: 'constants1',\n      constants: {\n        ...\n      }\n    }\n  }\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n * v0.4.6 - Closed #16. Global constants module option added to README.\n * v0.4.5 - Closed #3, #11. The parameters `space`, `deps`, `wrap` and `coffee` are not available on per module base. Thanks to [jjt](https://github.com/jjt).\n * v0.4.4 - Closed #10\n * v0.4.3 - Single constant option added. ejs dependency removed.\n * v0.4.2 - Wrap option added. Thanks to [gabrielmancini](https://github.com/gabrielmancini).\n\n[![githalytics.com alpha](https://cruel-carlota.pagodabox.com/b4bfcf00e0466f3f65e49548850d5d6e \"githalytics.com\")](http://githalytics.com/werk85/grunt-ng-constant)\n",
  "readmeFilename": "README.md",
  "_id": "grunt-ng-constant@0.4.7",
  "_from": "grunt-ng-constant@0.4.7",
  "dist": {
    "shasum": "678f76aa5d0de48ffe4f288dbe8ac2d44e3915f7"
  },
  "_resolved": "https://registry.npmjs.org/grunt-ng-constant/-/grunt-ng-constant-0.4.7.tgz"
}
